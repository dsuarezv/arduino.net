<Application x:Class="arduino.net.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        
		<SolidColorBrush x:Key="C0" Color="#FF2c333d"/>
        <SolidColorBrush x:Key="C0-Highlight" Color="#FF48576C"/>
        <SolidColorBrush x:Key="C0-Pressed" Color="#FF617693"/>
        <SolidColorBrush x:Key="C0-Disabled" Color="#FFC3C3C3"/>
    	<SolidColorBrush x:Key="C1" Color="#FF6A869B"/>
		<SolidColorBrush x:Key="C1-Highlight" Color="#FFA0B6C7"/>
		<SolidColorBrush x:Key="C1-Pressed" Color="#FFCDE4F0"/>
		<SolidColorBrush x:Key="C1-Disabled" Color="#FF3D444E"/>
    	<SolidColorBrush x:Key="C2" Color="#FFB7D1DE"/>
		<SolidColorBrush x:Key="C5" Color="#FFD34245"/>
		<SolidColorBrush x:Key="C6" Color="#FFEE861F"/>
        <SolidColorBrush x:Key="C7" Color="#FFEFe5db"/>

        <SolidColorBrush x:Key="B0" Color="#FFF0F0F0"/>
		<SolidColorBrush x:Key="B1" Color="#FFE5E5E5"/>
        <SolidColorBrush x:Key="B1-MouseOver" Color="#FFDCDCDC"/>

		<SolidColorBrush x:Key="B0-Text" Color="#FF3d444e"/>
		<SolidColorBrush x:Key="C0-Text" Color="#FFF0F0F0"/>


        <ControlTemplate TargetType="{x:Type Button}" x:Key="HeaderRoundButton">
            <Grid 
                Width="{TemplateBinding Height}" 
                Height="{TemplateBinding Height}" 
                >
                <Ellipse x:Name="ellipse"  Fill="Transparent" HorizontalAlignment="Stretch" Height="Auto" Stroke="{DynamicResource C1}" StrokeThickness="4" VerticalAlignment="Stretch" Width="Auto" />
            	<TextBlock x:Name="textBlock" Foreground="{DynamicResource C2}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center"><InlineUIContainer>
            			<ContentPresenter x:Name="contentPresenter"/>
            		</InlineUIContainer></TextBlock>
            </Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="IsEnabled" Value="False">
        			<Setter Property="Stroke" TargetName="ellipse" Value="{DynamicResource C1-Disabled}"/>
        			<Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource C1-Disabled}"/>
        		</Trigger>
        		<Trigger Property="IsMouseOver" Value="True">
        			<Setter Property="Stroke" TargetName="ellipse" Value="{DynamicResource C1-Highlight}"/>
        			<Setter Property="Fill" TargetName="ellipse" Value="{DynamicResource C1-Disabled}"/>
        		</Trigger>
        		<Trigger Property="IsPressed" Value="True">
        			<Setter Property="Stroke" TargetName="ellipse" Value="{DynamicResource C1-Pressed}"/>
        			<Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource C1-Pressed}"/>
        			<Setter Property="Fill" TargetName="ellipse" Value="{DynamicResource C1-Disabled}"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>

        
        

        <ControlTemplate x:Key="HeaderCheckbox" TargetType="{x:Type CheckBox}">
        	<Grid x:Name="grid" Margin="0,0,-3.5,0">
        		<TextBlock x:Name="textBlock" HorizontalAlignment="Stretch" Margin="20.125,0,0,0" TextWrapping="Wrap" VerticalAlignment="Stretch" Height="Auto" Width="Auto" Foreground="{DynamicResource C2}"><InlineUIContainer>
        				<ContentPresenter x:Name="contentPresenter"/>
        			</InlineUIContainer></TextBlock>
        		<Ellipse x:Name="ellipse" Fill="Transparent" HorizontalAlignment="Left" Height="16" Margin="0" Stroke="{DynamicResource C1}" VerticalAlignment="Top" Width="16" StrokeThickness="2"/>
        	</Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="IsChecked" Value="True">
        			<Setter Property="Fill" TargetName="ellipse" Value="{DynamicResource C2}"/>
        		</Trigger>
        		<Trigger Property="IsMouseOver" Value="True">
        			<Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource C1-Highlight}"/>
        			<Setter Property="Stroke" TargetName="ellipse" Value="{DynamicResource C1-Highlight}"/>
        		</Trigger>
				<Trigger Property="IsEnabled" Value="False">
        			<Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource C1-Disabled}"/>
        			<Setter Property="Stroke" TargetName="ellipse" Value="{DynamicResource C1-Disabled}"/>
					<Setter Property="Fill" TargetName="ellipse" Value="{DynamicResource C1-Disabled}"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>


        <!-- TabSelector styling -->
        

        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        
		
		<Style x:Key="TabSelectorListbox" TargetType="{x:Type ListBox}">
        	<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
        	<Setter Property="BorderThickness" Value="0"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ListBox}">
        				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
        					<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" FlowDirection="RightToLeft">
        						<ItemsPresenter FlowDirection="LeftToRight" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        					</ScrollViewer>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
        					</Trigger>
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="IsGrouping" Value="true"/>
        							<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
        						</MultiTrigger.Conditions>
        						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        					</MultiTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>


        
        <Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
		<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
		
		
		<Style x:Key="TabSelectorListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource B1-MouseOver}"/>
                            </MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource C0}"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Foreground" Value="{StaticResource B0}"/>
                            </MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>



        <!-- Expander -->



        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
        
        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        
                        
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>

                                <Border Grid.Column="0" HorizontalAlignment="Stretch" Height="Auto" Margin="10,5" SnapsToDevicePixels="True">
                                    <ContentPresenter Grid.Column="0"  RecognizesAccessKey="True" VerticalAlignment="Center"/>
                                </Border>
                                <Path x:Name="arrow" Grid.Column="1" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource C0}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource C0}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <Style x:Key="PadExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top"  
                                              Foreground="{StaticResource B0-Text}" FontSize="22" FontFamily="Segoe UI" FontWeight="Bold" FontStyle="Normal" FontStretch="Normal"
                                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style x:Key="RegularButtonStyle" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource B0}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource C0}"/>
        	<Setter Property="Foreground" Value="{StaticResource B0-Text}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" BorderBrush="{DynamicResource C0}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource B0}" SnapsToDevicePixels="true">
        					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsDefaulted" Value="true">
        						<Setter Property="Background" TargetName="border" Value="{DynamicResource C0}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource C0-Text}"/>
								<Setter Property="TextElement.FontWeight" TargetName="contentPresenter" Value="Bold"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource C1}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource C1}"/>
        						<Setter Property="Background" TargetName="border" Value="{DynamicResource C1}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource C1-Disabled}"/>
        						<Setter Property="Background" TargetName="border" Value="{DynamicResource C1-Disabled}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource C1-Disabled}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        
        
        
        
        
        <Style x:Key="HeaderSelectionButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{StaticResource C2}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">            
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" Focusable="True"> 
                            <Grid RenderTransformOrigin="0.832,0.485">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="20" />
								</Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" x:Name="textblock" Foreground="{StaticResource C2}" TextTrimming="WordEllipsis" TextAlignment="Right" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        		    <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="True"/>
                                </TextBlock>
                                <Path x:Name="arrow" Grid.Column="1" Data="M 1,1 L 4.5,6 L 8.5,1" HorizontalAlignment="Center" SnapsToDevicePixels="false" Fill="{StaticResource C2}" VerticalAlignment="Center"/>
                        	</Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" TargetName="textblock" Value="{StaticResource C1-Highlight}"/>
								<Setter Property="Fill" TargetName="arrow" Value="{StaticResource C1-Highlight}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Foreground" TargetName="textblock" Value="{StaticResource C1-Pressed}"/>
								<Setter Property="Fill" TargetName="arrow" Value="{StaticResource C1-Pressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" TargetName="textblock" Value="{StaticResource C1-Disabled}"/>
								<Setter Property="Fill" TargetName="arrow" Value="{StaticResource C1-Disabled}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        <Style x:Key="PadMenuButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{StaticResource B0-Text}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" SnapsToDevicePixels="true" Margin="0, 2, 10, 2">
                            <ContentPresenter x:Name="contentPresenter" TextElement.FontWeight="Bold" TextElement.Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource C0-Highlight}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource C0-Pressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource C0-Disabled}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




    </Application.Resources>
</Application>
