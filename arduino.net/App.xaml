<Application x:Class="arduino.net.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        
		<SolidColorBrush x:Key="C0" Color="#FF2c333d"/>
    	<SolidColorBrush x:Key="C1" Color="#FF6A869B"/>
		<SolidColorBrush x:Key="C1-Highlight" Color="#FFA0B6C7"/>
		<SolidColorBrush x:Key="C1-Pressed" Color="#FFCDE4F0"/>
		<SolidColorBrush x:Key="C1-Disabled" Color="#FF3D444E"/>
    	<SolidColorBrush x:Key="C2" Color="#FFB7D1DE"/>

        <SolidColorBrush x:Key="B0" Color="#FFF0F0F0"/>
		<SolidColorBrush x:Key="B1" Color="#FFE5E5E5"/>
        <SolidColorBrush x:Key="B1-MouseOver" Color="#FFDCDCDC"/>


        <ControlTemplate TargetType="{x:Type Button}" x:Key="HeaderRoundButton">
            <Grid 
                Width="{TemplateBinding Height}" 
                Height="{TemplateBinding Height}" 
                >
                <Ellipse x:Name="ellipse"  Fill="Transparent" HorizontalAlignment="Stretch" Height="Auto" Stroke="{DynamicResource C1}" StrokeThickness="4" VerticalAlignment="Stretch" Width="Auto" />
            	<TextBlock x:Name="textBlock" Foreground="{DynamicResource C2}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center"><InlineUIContainer>
            			<ContentPresenter x:Name="contentPresenter"/>
            		</InlineUIContainer></TextBlock>
            </Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="IsEnabled" Value="False">
        			<Setter Property="Stroke" TargetName="ellipse" Value="{DynamicResource C1-Disabled}"/>
        			<Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource C1-Disabled}"/>
        		</Trigger>
        		<Trigger Property="IsMouseOver" Value="True">
        			<Setter Property="Stroke" TargetName="ellipse" Value="{DynamicResource C1-Highlight}"/>
        			<Setter Property="Fill" TargetName="ellipse" Value="{DynamicResource C1-Disabled}"/>
        		</Trigger>
        		<Trigger Property="IsPressed" Value="True">
        			<Setter Property="Stroke" TargetName="ellipse" Value="{DynamicResource C1-Pressed}"/>
        			<Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource C1-Pressed}"/>
        			<Setter Property="Fill" TargetName="ellipse" Value="{DynamicResource C1-Disabled}"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>

        
        

        <ControlTemplate x:Key="HeaderCheckbox" TargetType="{x:Type CheckBox}">
        	<Grid x:Name="grid" Margin="0,0,-3.5,0">
        		<TextBlock x:Name="textBlock" HorizontalAlignment="Stretch" Margin="20.125,0,0,0" TextWrapping="Wrap" VerticalAlignment="Stretch" Height="Auto" Width="Auto" Foreground="{DynamicResource C2}"><InlineUIContainer>
        				<ContentPresenter x:Name="contentPresenter"/>
        			</InlineUIContainer></TextBlock>
        		<Ellipse x:Name="ellipse" Fill="Transparent" HorizontalAlignment="Left" Height="16" Margin="0" Stroke="{DynamicResource C1}" VerticalAlignment="Top" Width="16" StrokeThickness="2"/>
        	</Grid>
        	<ControlTemplate.Triggers>
        		<Trigger Property="IsChecked" Value="True">
        			<Setter Property="Fill" TargetName="ellipse" Value="{DynamicResource C2}"/>
        		</Trigger>
        		<Trigger Property="IsMouseOver" Value="True">
        			<Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource C1-Highlight}"/>
        			<Setter Property="Stroke" TargetName="ellipse" Value="{DynamicResource C1-Highlight}"/>
        		</Trigger>
        	</ControlTemplate.Triggers>
        </ControlTemplate>


        <!-- TabSelector styling -->
        

        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        
		
		<Style x:Key="TabSelectorListbox" TargetType="{x:Type ListBox}">
        	<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
        	<Setter Property="BorderThickness" Value="0"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ListBox}">
        				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
        					<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" FlowDirection="RightToLeft">
        						<ItemsPresenter FlowDirection="LeftToRight" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        					</ScrollViewer>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
        					</Trigger>
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="IsGrouping" Value="true"/>
        							<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
        						</MultiTrigger.Conditions>
        						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        					</MultiTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>


        
        <Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
		<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
		<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
		
		
		<Style x:Key="TabSelectorListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Padding" Value="4,1"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource B1-MouseOver}"/>
                            </MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource C0}"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Foreground" Value="{StaticResource B0}"/>
                            </MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		
    </Application.Resources>
</Application>
